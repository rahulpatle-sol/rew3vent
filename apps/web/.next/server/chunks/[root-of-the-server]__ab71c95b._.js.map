{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file:///D:/New%20folder%20%285%29/rew3vent/apps/web/src/app/api/auth/%5B...nextauth%5D/route.ts"],"sourcesContent":["\nimport NextAuth from \"next-auth\"\nimport GoogleProvider from \"next-auth/providers/google\"\nimport GithubProvider from \"next-auth/providers/github\"\n\nexport const authOptions = {\n  providers: [\n    GoogleProvider({\n      clientId: process.env.GOOGLE_CLIENT_ID!,\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET!,\n    }),\n    GithubProvider({\n      clientId: process.env.GITHUB_ID!,\n      clientSecret: process.env.GITHUB_SECRET!,\n    }),\n  ],\n  secret: process.env.NEXTAUTH_SECRET,\n  pages: {\n    signIn: '/login', // Direct users to custom login page\n    // error: '/auth/error', // Custom error page (optional)\n  },\n  // Callbacks can be added here if needed, e.g., to persist user data or modify session\n  // callbacks: {\n  //   async jwt({ token, account }) {\n  //     if (account) {\n  //       token.accessToken = account.access_token;\n  //     }\n  //     return token;\n  //   },\n  //   async session({ session, token }) {\n  //     session.accessToken = token.accessToken as string;\n  //     return session;\n  //   },\n  // },\n};\n\nconst handler = NextAuth(authOptions);\n\nexport { handler as GET, handler as POST };\n"],"names":[],"mappings":";;;;;AACA;AACA;AACA;;;;AAEO,MAAM,cAAc;IACzB,WAAW;QACT,CAAA,GAAA,qJAAA,CAAA,UAAc,AAAD,EAAE;YACb,UAAU,QAAQ,GAAG,CAAC,gBAAgB;YACtC,cAAc,QAAQ,GAAG,CAAC,oBAAoB;QAChD;QACA,CAAA,GAAA,qJAAA,CAAA,UAAc,AAAD,EAAE;YACb,UAAU,QAAQ,GAAG,CAAC,SAAS;YAC/B,cAAc,QAAQ,GAAG,CAAC,aAAa;QACzC;KACD;IACD,QAAQ,QAAQ,GAAG,CAAC,eAAe;IACnC,OAAO;QACL,QAAQ;IAEV;AAcF;AAEA,MAAM,UAAU,CAAA,GAAA,uIAAA,CAAA,UAAQ,AAAD,EAAE","debugId":null}}]
}